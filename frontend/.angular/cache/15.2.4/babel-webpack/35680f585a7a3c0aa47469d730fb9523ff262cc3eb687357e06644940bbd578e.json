{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GithubService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = environment.url;\n  }\n  allUsers(since = 0) {\n    return this.http.get(`${this.baseURL}/api/users?since=${since}`);\n  }\n  details(username) {\n    return this.http.get(`${this.baseURL}/api/users/${username}/details`);\n  }\n  repositories(username, pg, limit) {\n    return this.http.get(`${this.baseURL}/api/users/${username}/repos?pg=${pg}&limit=${limit}`);\n  }\n}\nGithubService.ɵfac = function GithubService_Factory(t) {\n  return new (t || GithubService)(i0.ɵɵinject(i1.HttpClient));\n};\nGithubService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GithubService,\n  factory: GithubService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAWH,WAAW,CAACI,GAAG;EAEO;EAExCC,QAAQ,CAACC,QAAgB,CAAC;IACxB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,oBAAoBF,KAAK,EAAE,CAAC;EAClE;EAEAG,OAAO,CAACC,QAAgB;IACtB,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,cAAcE,QAAQ,UAAU,CAAC;EACvE;EAEAC,YAAY,CAACD,QAAgB,EAAEE,EAAU,EAAEC,KAAa;IACtD,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,cAAcE,QAAQ,aAAaE,EAAE,UAAUC,KAAK,EAAE,CAAC;EAC7F;;AAhBWZ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAa,SAAbb,aAAa;EAAAc,YAFZ;AAAM","names":["environment","GithubService","constructor","http","url","allUsers","since","get","baseURL","details","username","repositories","pg","limit","factory","providedIn"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\www\\github-usefull\\frontend\\src\\app\\services\\github.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubService {\n\n  baseURL: string = environment.url\n\n  constructor(private http: HttpClient) { }\n\n  allUsers(since: number = 0) {\n    return this.http.get(`${this.baseURL}/api/users?since=${since}`)\n  }\n\n  details(username: string) {\n    return this.http.get(`${this.baseURL}/api/users/${username}/details`)\n  }\n\n  repositories(username: string, pg: number, limit: number) {\n    return this.http.get(`${this.baseURL}/api/users/${username}/repos?pg=${pg}&limit=${limit}`)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}